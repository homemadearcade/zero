{"version":3,"sources":["../../src/models/Lobby.js"],"names":["Schema","mongoose","lobbySchema","participants","type","Types","ObjectId","ref","participantId","String","game","gameHostId","startTime","timestamps","validateLobby","lobby","methods","toJSON","id","_id","toString","map","user","Lobby","model"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAaC,iBAAnB;AAEA,MAAMC,WAAW,GAAG,IAAIF,MAAJ,CAClB;AACEG,EAAAA,YAAY,EAAE,CAAC;AAAEC,IAAAA,IAAI,EAAEH,kBAASD,MAAT,CAAgBK,KAAhB,CAAsBC,QAA9B;AAAwCC,IAAAA,GAAG,EAAE;AAA7C,GAAD,CADhB;AAEEC,EAAAA,aAAa,EAAE;AACbJ,IAAAA,IAAI,EAAEK,MADO,CAEb;;AAFa,GAFjB;AAMEC,EAAAA,IAAI,EAAE;AAAEN,IAAAA,IAAI,EAAEH,kBAASD,MAAT,CAAgBK,KAAhB,CAAsBC,QAA9B;AAAwCC,IAAAA,GAAG,EAAE;AAA7C,GANR;AAOEI,EAAAA,UAAU,EAAE;AACVP,IAAAA,IAAI,EAAEK,MADI,CAEV;;AAFU,GAPd;AAWE;AACA;AACA;AACA;AACAG,EAAAA,SAAS,EAAE;AACTR,IAAAA,IAAI,EAAEK,MADG,CAET;;AAFS;AAfb,CADkB,EAqBlB;AAAEI,EAAAA,UAAU,EAAE;AAAd,CArBkB,CAApB;;AAwBO,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAEtC,SAAO,IAAP,CAFsC,CAGtC;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CArBM;;;;AAuBPb,WAAW,CAACc,OAAZ,CAAoBC,MAApB,GAA6B,YAAY;AAAA;;AACvC,SAAO;AACLC,IAAAA,EAAE,EAAE,KAAKC,GAAL,CAASC,QAAT,EADC;AAELR,IAAAA,SAAS,EAAE,KAAKA,SAFX;AAGLT,IAAAA,YAAY,EAAE,KAAKA,YAAL,GAAoB,KAAKA,YAAL,CAAkBkB,GAAlB,CAAuBC,IAAD,IAAU;AAChE,aAAOA,IAAI,CAACL,MAAL,EAAP;AACD,KAFiC,CAApB,GAET,EALA;AAMLP,IAAAA,IAAI,gBAAE,KAAKA,IAAP,+CAAE,WAAWO,MAAX,EAND;AAOLN,IAAAA,UAAU,EAAE,KAAKA,UAPZ;AAQLH,IAAAA,aAAa,EAAE,KAAKA,aARf,CASL;;AATK,GAAP;AAWD,CAZD;;AAcA,MAAMe,KAAK,GAAGtB,kBAASuB,KAAT,CAAe,OAAf,EAAwBtB,WAAxB,CAAd;;eAEeqB,K","sourcesContent":["import mongoose from 'mongoose';\nimport Joi from 'joi';\n\nconst { Schema } = mongoose;\n\nconst lobbySchema = new Schema(\n  {\n    participants: [{ type: mongoose.Schema.Types.ObjectId, ref: 'User' }],\n    participantId: {\n      type: String,\n      // required: true,\n    },\n    game: { type: mongoose.Schema.Types.ObjectId, ref: 'Game' },\n    gameHostId: {\n      type: String,\n      // required: true,\n    },\n    // guideId: {\n    //   type: String,\n    //   required: true,\n    // },\n    startTime: {\n      type: String,\n      // required: true,\n    },\n  },\n  { timestamps: true },\n);\n\nexport const validateLobby = (lobby) => {\n\n  return true\n  //Joi.object().pattern(/^/, Joi.date().iso())\n  // const schema = {\n  //   hero: Joi.object({\n  //     // spawnX: Joi.number().required(),\n  //     // spawnY: Joi.number().required()\n  //   }),\n  //   world: Joi.object({\n\n  //   }),\n  //   metadata: Joi.object({\n\n  //   }),\n  //   objects: Joi.object(),\n  //   classes: Joi.object(),\n  //   brushes: Joi.object(),\n  //   awsImages: Joi.object(),\n  // };\n  // return Joi.validate(game, schema, { allowUnknown: true });\n};\n\nlobbySchema.methods.toJSON = function () {\n  return {\n    id: this._id.toString(),\n    startTime: this.startTime,\n    participants: this.participants ? this.participants.map((user) => {\n      return user.toJSON()\n    }) : [],\n    game: this.game?.toJSON(),\n    gameHostId: this.gameHostId,\n    participantId: this.participantId,\n    // guideId: this.guideId\n  };\n};\n\nconst Lobby = mongoose.model('Lobby', lobbySchema);\n\nexport default Lobby;\n"],"file":"Lobby.js"}